swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http

paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      #produces:
       # - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  # Ajout des Endpoints
  # Obtenir tous les comptes.
  /accounts:
    get:
      security:
        - Bearer: []
      tags: 
        - User Accounts
      summary: Accounts
      Description: API for accounts
      Responses:
        '200':
          Description: User accounts retrieved successfully
          Shema:
            $ref: '#/definitions/AccountsResponse'
        '400':
          Description: Invalid Fields
        '500':
          Description: Internal Server Error
  # Obtenir un compte spécifique.
  /accounts/{accountId}:
    get:
      security:
        - Bearer: []
      tags: 
        - User Accounts
      summary: Specific account
      Description: API for specific account
      Responses:
        '200':
          Description: User specific account retrieved successfully
          Shema:
            $ref:'4#/definitions/SpecificAccountResponse'
        '400':
          Description: Invalid Fields
        '500':
          Description: Internal Server Error
  # Obtenir toutes les transactions.
  /transactions:
    get:
      security:
        - Bearer: []
      tags: 
        - User Transactions
      summary: Transactions
      Description : API for transactions
      Responses :
      '200' :
        Description : User transactions retrieved successfully
        Shema :
          $ref : '#/definitions/TransactionsResponse'
      '400' :
        Description : Invalid Fields
      '500' :
        Description : Internal Server Error
  # Obtenir une transaction spécifique.
  /transactions/{transactionId}:
    get:
      security:
        - Bearer: []
      tags: 
        - User Transactions
      summary: Specific transaction
      Description : API for specific transaction
      Responses :
      '200' :
        Description : User specific transaction retrieved successfully
        Shema :
          $ref : '#/definitions/SpecificTransactionResponse'
      '400' :
        Description : Invalid Fields
      '500' :
        Description : Internal Server Error
  # Mettre à jour une information de type catégorie dans une transaction spécifique.
  /transactions/{transactionId}/category:
    put:
      security:
        - Bearer: []
      tags: 
        - User Transactions
      summary: transaction category API
      Description : API for updating a transaction category
      parameters:
      - in: body
        category: body
        description: update transaction category
        required: true
        schema:
          $ref: '#/definitions/TransactionCategory'
      produces:
        - application/json
      Responses :
      '200' :
        Description : Selected category retrieved successfully
        Shema :
          $ref : '#/definitions/CategoryResponse'
      '400' :
        Description : Invalid Fields
      '500' :
        Description : Internal Server Error
  # Modifier ou ajouter une information de type note dans une transaction spécifique.
  /transactions/{transactionId}/note:
    put:
      security:
        - Bearer: []
      tags: 
        - User Transactions
      summary: transaction note API
      Description : API for updating or add a transaction note
      parameters:
      - in: body
        category: body
        description: update transaction note
        required: true
        schema:
          $ref: '#/definitions/TransactionNote'
      produces:
        - application/json
      Responses :
      '200' :
        Description : updating or add note successfully
        Shema :
          $ref : '#/definitions/NoteResponse'
      '400' :
        Description : Invalid Fields
      '500' :
        Description : Internal Server Error
  # Supprimer une information de type note dans une transaction spécifique.
  /transactions/{transactionId}/note:
    delete:
      security:
        - Bearer: []
      tags: 
        - User Transaction
      summary: transaction note API
      Description : API for delete a transaction note
      parameters:
      - in: body
        category: body
        description: delete transaction note
        required: true
        schema:
          $ref: '#/definitions/TransactionNote'
      produces:
          - application/json
      Responses :
      '200' :
        Description : updating or add note successfully
        Shema :
          $ref : '#/definitions/NoteResponse'
      '400' :
        Description : Invalid Fields
      '500' :
        Description : Internal Server Error
  # Ajout des Endpoints
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string